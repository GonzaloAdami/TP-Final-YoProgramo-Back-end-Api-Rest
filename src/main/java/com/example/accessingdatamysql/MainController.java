package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;




@CrossOrigin(origins = "https://yoprogramo-frontend-2d963.web.app")
@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    
      @GetMapping(path="/all")
public ResponseEntity<Iterable<User>> getAllUsers() {
    // This returns a JSON or XML with the users
    HttpHeaders headers = new HttpHeaders();
    headers.add("Access-Control-Allow-Origin", "https://yoprogramo-frontend-2d963.firebaseapp.com");

    Iterable<User> users = userRepository.findAll();

    return ResponseEntity.ok().headers(headers).body(users);
}

  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @CrossOrigin(origins = "https://yoprogramo-frontend-2d963.web.app")
  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    User n = new User();
    n.setName(name);
    n.setEmail(email);
    userRepository.save(n);
    return "Saved";
  }
}